
Lab 2 Exercise 1 Setup

Step 2
docker start mongodb
docker start pymongo-app
docker ps


Lab 2 Exercise 2 Reverse Proxy
Step 1
sudo vim /etc/nginx/conf.d/default.conf

Step 2
upstream py-mongo {
    server localhost:5000;
}

Step 3
        proxy_pass http://py-mongo;

Step 4
sudo nginx -s reload

Step 5
http://localhost



Lab 2 Exercise 3 Set up Logging

Step 1
sudo vim /etc/nginx/conf.d/default.conf

Step 2
log_format json_log escape=json '{' '"time_local":"$time_local",' '"core":{' '"remote_addr":"$remote_addr",'  '"request":"$request",' '"status":"$status",' '"cache_status":"$upstream_cache_status",' '"body_bytes_sent":"$body_bytes_sent",' '"http":{' '"http_referer":"$http_referer",' '"http_user_agent":"$http_user_agent",' '"http_x_forwarded_for":"$http_x_forwarded_for"' '}' '}' '}';

Step 3
    access_log /var/log/nginx/py-mongo.access.log json_log;

Step 4
sudo nginx -s reload

Step 5
sudo tail -f /var/log/nginx/py-mongo.access.log | jq

Lab 2 - Exercise 4 is done on your second lab system: NGINX_Cache2. Use the Snippets file and Lab Guide pdf on that system.


Lab 2 - Exercise 5 Set up NGINX Caching

Step 1a
sudo vim /etc/nginx/conf.d/default.conf

Step 1b
proxy_cache_path /data/nginx/cache levels=1:2 keys_zone=py-mongo:20m inactive=5m max_size=1G;

Step 2
    proxy_cache_key $scheme$host$request_uri;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

Step 3
        proxy_cache py-mongo;
        proxy_cache_valid 200 5m;

Step 4
sudo nginx -s reload

Step 5a
ls -ld /data/nginx/cache

Step 5b - ONLY do these if the directory /data/nginx/cache does NOT exist:

sudo mkdir -p /data/nginx/cache
sudo chown nginx /data/nginx/cache
ls -ld /data/nginx/cache

Step 6
docker ps

Step 7
docker logs -f pymongo-app

Step 8 
tail -f /var/log/nginx/py-mongo.access.log | jq

Step 9
http://localhost


Lab 2 - Exercise 6 Instrumenting the Cache & Benchmarking

Step 1
sudo vim /etc/nginx/conf.d/default.conf

map $remote_addr $cache_status {
    127.0.0.1   $upstream_cache_status;
    default         "";
}

Step 2
    add_header X-Cache-Status $cache_status;

Step 3
sudo nginx -s reload

Step 4
curl -I localhost

Step 5
curl -I localhost
curl -I localhost


Step 6
Lab 2 - Exercise 6 Step 6 The last part of Exercise 6 is done on your second lab system: NGINX_Cache2. Use the Snippets file and Lab Guide pdf on that system.


Lab 2 - Exercise 7 Dashboard Page

Step 1
sudo vim /etc/nginx/conf.d/default.conf

Step 2
    location /api {
	api;
	access_log off;
    }

    location /dashboard {
        try_files $uri $uri.html;
        access_log off;
    }

Step 3
sudo nginx -s reload

Step 4
http://localhost/dashboard

Step 6
curl -I localhost
curl -I localhost
curl -I localhost

Step 8
sudo vim /etc/nginx/conf.d/default.conf
    zone py-mongo-zone 64k;

Step 9
    status_zone proxy;

Step 10
sudo nginx -s reload



